"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.notificationController = exports.aController = exports.chatController = exports.postController = exports.uController = exports.notificationUseCase = exports.chatUseCase = exports.postUseCase = void 0;
const userController_1 = require("../adapters/controllers/userController");
const userUseCase_1 = require("../useCases/userUseCase");
const MailSender_1 = require("../providers/MailSender");
const otpGenerator_1 = require("../providers/otpGenerator");
const bcryptPassword_1 = require("../providers/bcryptPassword");
const jwtToken_1 = require("../providers/jwtToken");
const userRepository_1 = require("../infrastructure/repositories/userRepository");
const tempUserRepository_1 = require("../infrastructure/repositories/tempUserRepository");
const postRepository_1 = require("../infrastructure/repositories/postRepository");
const postController_1 = require("../adapters/controllers/postController");
const postUseCase_1 = require("../useCases/postUseCase");
const adminController_1 = require("../adapters/controllers/adminController");
const adminUseCase_1 = require("../useCases/adminUseCase");
const adminRepository_1 = require("../infrastructure/repositories/adminRepository");
const chatUseCase_1 = require("../useCases/chatUseCase");
const chatRepository_1 = require("../infrastructure/repositories/chatRepository");
const chatController_1 = require("../adapters/controllers/chatController");
const notificationUseCases_1 = require("../useCases/notificationUseCases");
const notificationRepository_1 = require("../infrastructure/repositories/notificationRepository");
const notificaitonController_1 = require("../adapters/controllers/notificaitonController");
const userRepository = new userRepository_1.UserRepository();
const adminRepository = new adminRepository_1.AdminRepository();
const tempUserRepository = new tempUserRepository_1.TempUserRepository();
const jwttoken = new jwtToken_1.JWTtoken();
const encrypt = new bcryptPassword_1.Encrypt();
const otpGenerator = new otpGenerator_1.GenerateOTP();
const mailSender = new MailSender_1.MailSender();
const postRepository = new postRepository_1.PostRepository();
const chatRepository = new chatRepository_1.ChatRepository();
const notificationRepository = new notificationRepository_1.NotificationRepository();
const userUseCase = new userUseCase_1.UserUseCase(encrypt, jwttoken, userRepository, tempUserRepository, mailSender);
exports.postUseCase = new postUseCase_1.PostUseCase(postRepository);
const adminUseCase = new adminUseCase_1.AdminUseCase(encrypt, adminRepository, jwttoken);
exports.chatUseCase = new chatUseCase_1.ChatUseCase(chatRepository);
exports.notificationUseCase = new notificationUseCases_1.NotificationUseCase(notificationRepository);
exports.uController = new userController_1.UserController(userUseCase, otpGenerator, encrypt);
exports.postController = new postController_1.PostController(exports.postUseCase);
exports.chatController = new chatController_1.ChatController(exports.chatUseCase);
exports.aController = new adminController_1.AdminController(adminUseCase, userUseCase);
exports.notificationController = new notificaitonController_1.NotificationController(exports.notificationUseCase);
